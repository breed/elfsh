			]=------ kernsh ------=[


Kernsh uses Libkernsh which is a library to play with kernel image in real 
time or on disk.

You can obtain all information necessary about kernel(syscalls, idt, gdt, 
symbols, ...), insert module inside the memory. hijack functions, etc

You can profite of eresi's language to define you own structure and 
communicate with the kernel.

Features :
	-
	-
	-
	-
	-
	-


Depends : libasm, librevm, libaspect, libmjollnir, libelfsh


By default, Libkernsh do the following action :
	- If libkernsh.without_kernel is set to 0
		- If libkernsh.use_kernel is set to 1 :
			- Open libkernsh.storagepath + libkernsh.kernelelf

		- Else :
			- Open libkernsh.storagepath + libkernsh.kernel
			- Extract/Gunzip it
			- Open the final kernel

	- Open memory device in libkernsh.device with mode libkernsh.mode and mmap it if 
	  libkernsh.mmap is set to 1 (with a size of libkernsh.mmap_size)

	- Have fun !

You can define all the libkernsh.*, see section Options below.


[+] Portability :

 -------------------------------------------------------------------------
|   \  ARCH   |  IA32  |  SPARC  | SPARC64 |  MIPS  |  ALPHA  |
| OS \        |        |         |         |        |         |
 -------------------------------------------------------------------------
|  LINUX 2.4  |        |         |         |        |         |
|             |        |         |         |        |         |
 -------------------------------------------------------------------------
|  LINUX 2.6  |        |         |         |        |         |
|             |        |         |         |        |         |
 -------------------------------------------------------------------------
|    NETBSD   |        |         |         |        |         |
|             |        |         |         |        |         |
 -------------------------------------------------------------------------
|   FREEBSD   |        |         |         |        |         |
|             |        |         |         |        |         |
 -------------------------------------------------------------------------


[+] Details :

 -------------------------------------------------------------------------
|   \  FEAT   | MEMORY | KERNEL  |  SYMBS  |        |
| OS \        |        |         |         |        |
 -------------------------------------------------------------------------
|  LINUX 2.4  |  WIP   |         |         |        |
|    IA32     |        |         |         |        |
 -------------------------------------------------------------------------
|  LINUX 2.4  |  WIP   |         |         |        |
|    SPARC    |        |         |         |        |
 ------------------------------------------------------------------------
|  LINUX 2.4  |  WIP   |         |         |        |
|   SPARC64   |        |         |         |        |
 ------------------------------------------------------------------------
|  LINUX 2.4  |  WIP   |         |         |        |
|    MIPS     |        |         |         |        |
 ------------------------------------------------------------------------
|  LINUX 2.4  |  WIP   |         |         |        |
|    ALPHA    |        |         |         |        |
 ------------------------------------------------------------------------
|  LINUX 2.6  |  DONE  |         |         |        |
|    IA32     |        |         |         |        |
 -------------------------------------------------------------------------
|  LINUX 2.6  |        |         |         |        |
|    SPARC    |   UT   |         |         |        |
 ------------------------------------------------------------------------
|  LINUX 2.6  |        |         |         |        |
|   SPARC64   |   UT   |         |         |        |
 ------------------------------------------------------------------------
|  LINUX 2.6  |        |         |         |        |
|    MIPS     |   UT   |         |         |        |
 ------------------------------------------------------------------------
|  LINUX 2.6  |        |         |         |        |
|    ALPHA    |   UT   |         |         |        |
 ------------------------------------------------------------------------
|   NETBSD    |  DONE  |         |         |        |
|    IA32     |        |         |         |        |
 -------------------------------------------------------------------------
|   NETBSD    |        |         |         |        |
|    SPARC    |   UT   |         |         |        |
 ------------------------------------------------------------------------
|   NETBSD    |        |         |         |        |
|   SPARC64   |   UT   |         |         |        |
 ------------------------------------------------------------------------
|   NETBSD    |        |         |         |        |
|    MIPS     |   UT   |         |         |        |
 ------------------------------------------------------------------------
|   NETBSD    |        |         |         |        |
|    ALPHA    |   UT   |         |         |        |
 ------------------------------------------------------------------------


[ 
 legends :
	- WIP		: 	Work In Progress
	- UT 		: 	Untested
]


[+] Commands : 
	- openmem :
		func 	:	open memory and by default gzip kernel	
		args 	:	no
		return 	:	int
		options  :

	- closemem :
		func	:	close memory
		args 	:	no
		return	:	int
		options :

	- mode :
		func	:	with no args display the mode
		args	:	yes (not obligatory), "static" and "dynamic"
		return  :	int
		options :

	- sct :
		func :
		args :
		return :
		options :

	- idt :
		func :		
		args :
		return :
		options :

	- mem :
		func :
		args : alloc, free, alloc_nc, free_nc
			alloc : alloc contiguous memory
				args : size
			free : free contiguous memory
				args : addr to free
			alloc_nc : alloc non contiguous memory
				args : size
			free_nc : free non contiguous memory
				args : addr to free
			symb : get an address of a symbol
				args : symbol's name
		return : variable $_ is set with the return address or
			 the return value 
		options :

[+] Options :

An option can be set directly in the shell or in the .kernshrc :
	configure libkernsh.option VALUE

[
 legends : (D) => default, 
	   (L) => specific to Linux, 
	   (N) => specific to Netbsd,
           (F) => specific to Freebsd 
	   
	   [S*] => any string value
	   [I*] => any integer value 
	   [L*] => any long value
]
	
	- libkernsh.device : The memory device which will be opened
		- /dev/mem (D)
		- /dev/kmem (L)
		- /proc/kcore (L)

	- libkernsh.mode : The mode to open the memory
		- read
		- write (D)
	
	- libkernsh.mmap : Mmap the memory (Must be USED to have all features)
		- 0
		- 1 (D)

	- libkernsh.mmap_size : Mmap's size of the memory
		- 200 * 1024 * 1024 (D)
		- [I*]
	
	- libkernsh.systemmap : (L) Path of the system map
		- /boot/System.map-`uname -r` (D)
		- [S*]

	- libkernsh.kernel : Path of the gzip kernel
		- /boot/vmlinuz (D) (L)
		- [S*]

	- libkernsh.gzipcmd : Which is the gzid command
		- gzip (D)
		- [S*]

	- libkernsh.objcopycmd : Which is  the objcopy command
		- objcopy
		- [S*]

	- libkernsh.kernelgz : The name to save the extract gzip kernel
		- vmlinuz.gz (D) (L)
		- [S*]		

	- libkernsh.kernelelf : The name of the extract/gunzip kernel
		- vmlinux (D) (L)
		- [S*]

	- libkernsh.storagepath : A path to store kernel and to open debug kernel
		- /tmp/ (D)
		- [S*]

	- libkernsh.nbsyscalls : The number of syscalls
		- 320 (D) (L)
		- [I*]

	- libkernsh.nilsyscalls : A position inside the syscall table of a free syscall
		- 17 (D) (L)
		- [I*]	

	- libkernsh.use_kernel : use the full debug kernel(not the gzip kernel)
		- 0 (D)
		- 1

	- libkernsh.without_kernel : not use the kernel, only memory
		- 0 (D)
		- 1

	- libkernsh.kernel_start : address of kernel start
		- 0xc0000000 (D) (L)
		- [L*]

	- libkernsh.kernel_end : address of kernel end
		- 0xc1000000 (D) (L)
		- [L*]

[+] Authors 

Original version (0.1 => 0.2c) started in 2001 and original authors : 
	sauron, zorgon, kstat

The project has been transfered to pouik in 2007.

[+] Contacts

Information about kernsh : support at kernsh.org

author's mail : pouik at kernsh.org

[+] Bugs

Please use http://bts.eresi-project.org/

Compile libkernsh in debug mode, change in libkernsh/include/libkernsh.h 
the define :
	#define	__DEBUG_KERNSH__			0
in
	#define	__DEBUG_KERNSH__			1
	

[+] Url

eresi : http://www.eresi-project.org

kernsh : http://www.kernsh.org

blog : http://blog.kernsh.org
