#!evarista/evarista32
#lir-definition.esh

# Attributes for ASM instructions
define b   ASM_TYPE_IMPBRANCH
define cb  ASM_TYPE_CONDBRANCH
define c   ASM_TYPE_CALLPROC
define i   ASM_TYPE_INT
define r   ASM_TYPE_RETPROC
define p   ASM_TYPE_PROLOG
define cmp ASM_TYPE_COMPARISON
define bs  ASM_TYPE_BITSET
define bt  ASM_TYPE_BITTEST
define a   ASM_TYPE_ASSIGN
define wm  ASM_TYPE_STORE
define rm  ASM_TYPE_LOAD
define e   ASM_TYPE_EPILOG
define s   ASM_TYPE_STOP
define n   ASM_TYPE_NOP
define ar  ASM_TYPE_ARITH
define wf  ASM_TYPE_WRITEFLAG
define rf  ASM_TYPE_READFLAG
define id  ASM_TYPE_INCDEC
define io  ASM_TYPE_IO
define sp  ASM_TYPE_TOUCHSP

define ar-wf    ar  wf
define ar-id-wf ar  id wf
define cmp-wf   cmp wf
define io-rm    io  rm
define io-wm    io  wm
define i-rf-bt  i   rf bt
define i-r      i   r
define a-rm-wm  a   rm wm
define sp-rm    sp  rm
define sp-rm-wf sp  rm wf
define sp-wm-rf sp  wm rf
define wm-rm    wm  rm
define a-rm     a   rm


# Attributes for ASM operands
define reg	ASM_OPTYPE_REG
define imm	ASM_OPTYPE_IMM
define mem	ASM_OPTYPE_MEM

# Types of LIR operands
type Reg            = id:int
type Immed          = val:long
type Mem            = base:Reg index:Reg scale:Immed off:Immed name:string

# Types of LIR instructions
type Ins            = uflags:Immed addr:Immed

type IndBranchR::Ins = dst:Reg
type IndBranchM::Ins = dst:Mem
type Branch::Ins     = dst:Immed
type Call::Ins       = dst:Immed
type IndCallR::Ins   = dst:Reg
type IndCallM::Ins   = dst:Mem
type Return::Ins     = dst:Immed
type TernopR3::Ins   = dst:Reg rsrc1:Reg rsrc2:Reg
type TernopM3::Ins   = dst:Mem msrc1:Mem msrc2:Mem
type TernopRI::Ins   = dst:Reg rsrc:Reg isrc:Immed
type TernopMI::Ins   = dst:Mem msrc:Mem isrc:Immed
type TernopMR::Ins   = dst:Mem msrc:Mem rsrc:Reg
type TernopRM::Ins   = dst:Reg rsrc:Reg msrc:Mem
type TernopRMI::Ins  = dst:Reg rsrc:Reg msrc:Mem isrc:Imm
type AssignRI::Ins   = dst:Reg src:Immed
type AssignMI::Ins   = dst:Mem src:Immed
type AssignRM::Ins   = dst:Reg src:Mem
type AssignMR::Ins   = dst:Mem src:Reg
type AssignMM::Ins   = dst:Mem src:Mem
type AssignRR::Ins   = dst:Reg src:Reg
type IoRR::Ins         = dst:Reg src:Reg
type IoIR::Ins       = dst:Immed src:Reg
type IoRI::Ins       = dst:Reg src:Immed
type BitSet::Ins     = src:Immed dst:Reg
type CmpRI::Ins      = fst:Immed snd:Reg
type CmpRR::Ins      = fst:Reg snd:Reg
type CmpRM::Ins      = fst:Mem snd:Reg
type CmpMR::Ins      = fst:Reg snd:Mem
type CmpMI::Ins      = fst:Immed snd:Mem
type XchgRR::Ins     = fst:Reg snd:Reg
type XchgMR::Ins     = fst:Mem snd:Reg
type Prolog::Ins     = framesz:Immed
type Interrupt::Ins  = dst:Immed
type IReturn::Ins
type Epilog::Ins
type Stop::Ins
type Nop::Ins
type FlagR::Ins
type FlagW::Ins